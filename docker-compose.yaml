version: "3"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      # target: dev
    restart: always
    ports:
      - "2024:2024"
    environment:
      HOST: app:2023
      NODE_ENV: "development"
      PORT: 2024
      API_VERSION: v1
      WEB_APP_URL: "http://localhost:3000"
      EMAIL_JWT_SECRET: dsfsdjfjsd
      JWT_SECRET: Vl9fTsn0XUC4SSudWkVp1zwvG8kKPUui
      EXPIRES_IN: 7d
      TOKEN_EXPIRATION: 2d
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}

    depends_on:
      - postgres_db
    volumes:
      - .:/usr/src/app
    networks:
      - wedding_services_network

  postgres_db:
    image: postgres
    restart: on-failure
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - wedding_services_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "5050:80"
    depends_on:
      - postgres_db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - wedding_services_network
volumes:
  postgres_data:
  pgadmin_data:

networks:
  wedding_services_network:
    driver: bridge
